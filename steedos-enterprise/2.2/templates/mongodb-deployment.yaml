apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.24.0 (4a2a0458)
  creationTimestamp: null
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.24.0 (4a2a0458)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
    spec:
      volumes:
        - name: steedos-mongo-data
          persistentVolumeClaim:
            claimName: steedos-mongo-data
      tolerations:
      - key: "node.kubernetes.io/unschedulable"
        operator: "Equal"
        value: ""
        effect: "NoSchedule"
      initContainers:
        - name: init-myservice
          image: {{ .Values.services.mongodb.image }}
          securityContext:
            runAsUser: 0
          command: ['sh', '-c', "echo $(date +%T) start && chown -R 1001:1001 /bitnami "]
          volumeMounts:
          - name: steedos-mongo-data
            mountPath: {{ .Values.services.mongodb.data_path }}
      containers:
        - env:
            - name: ALLOW_EMPTY_PASSWORD
              value: {{ quote .Values.services.mongodb.env.allow_empty_password }}
            - name: MONGODB_ADVERTISED_HOSTNAME
              value: {{ .Values.services.mongodb.env.mongodb_advertised_hostname }}
            - name: MONGODB_ENABLE_JOURNAL
              value: {{ quote .Values.services.mongodb.env.mongodb_enable_journal }}
            - name: MONGODB_INITIAL_PRIMARY_HOST
              value: {{ .Values.services.mongodb.env.mongodb_initial_primary_host }}
            - name: MONGODB_REPLICA_SET_MODE
              value: {{ .Values.services.mongodb.env.mongodb_replica_set_mode }}
            - name: MONGODB_REPLICA_SET_NAME
              value: {{ .Values.services.mongodb.env.mongodb_replica_set_name }}
          image: {{ .Values.services.mongodb.image }}
          securityContext:
            runAsUser: 1001
          name: mongodb
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 27017
          #     scheme: HTTP
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: {{ .Values.services.mongodb.data_path }}
              name: steedos-mongo-data
      restartPolicy: Always
status: {}